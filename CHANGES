Major changes on top of duply.

* GLOBAL CONFIG

The file "conf" in ~/.duply or /etc/duply is sourced before profile's "conf"

This file is created automatically if not present.
By default the file contains no active settings - only the template.

* NAMED OPTIONS IN THE CONFIG FILE

The volume size and other duplicity options are now setted via separate shell
variables.

So it's now ok to source two global and profile's configs sequentally.

* SEPARATE INIT COMMAND

"scduply init" - will create the top configuration folder and the global
config.  This is not mandatory and is also automatically invoked upon
"scduply ... create"

* SOURCE separated to the file

Backup source ($SOURCE) is now separated to the file "source", because now
it's ok the configurations with empty profile's "conf" file.

* SAVED ENVIRONMENT

The backup credentials (TARGET, GPG_* etc.) are now automatically saved to
"saved.env" file so it's still ok to save only profile folder even with global
config.

* PROFILE NAME PASSED TO DUPLICITY

Now the profile's name (if any) is passed to duplicity with --name and with
$TARGET's suffix.
So if the TARGET is file:///blah/blah, then the actual target folder will be
file:///blah/blah/NAME and the backup will be named NAME

* TARGET SUBDIRECTORY SPECIFICATION

The option "--in-target PATH" will add PATH to the TARGET just after the NAME
Useful for differential backups supported by external file manipulations.

* ARCHIVE_DIR FOR DUPLICITY

Support for --archive-dir

* STORING DUPLICITY LOG AND STATUS

LOG_DIR is
 ~/.scduply/log/$NAME - when the config is in ~/.scduply
 /var/log/scduply - when the config is in /etc/scduply
 CONF_DIR - when the config is passed directly to scduply

After backup operations the theese files are stored:
 duplicity-log.TIMESTAMP.gz - the compressed log
 duplicity-status.TIMESTAMP - the duplicity exit code
 duplicity-log.err.TIMESTAMP.gz - the error log if there was no new  manifest

After other commands the log created of form:
 duplicity-cmdlog-COMMAND.TIMESTAMP.gz

LOG_DIR is not purged automatically (TODO).

* BKPALL COMMAND

scduply bkpall

Will execute "scduply NAME incr" for all profiles, found in CONFHOME
File "skip" in the particular profile will skip it from the mass operation

* GUI-GENERATED CONFIG

To support GIU frontends like SCDW, the global and local files "conf.scdw"
are readed before global and local configs respectively.

Note, that manual changes in "conf" files will take precedence.
